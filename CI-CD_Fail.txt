Run echo "🔍 Running code quality checks..."
🔍 Running code quality checks...

> subpilot-app@1.6.2 type-check
> tsc --noEmit

Error: src/app/(dashboard)/analytics/page.tsx(88,3): error TS2686: 'React' refers to a UMD global, but the current file is a module. Consider adding an import instead.
Error: src/app/api/webhooks/stripe/route.ts(50,56): error TS2345: Argument of type 'Subscription' is not assignable to parameter of type 'StripeSubscriptionWithPeriods'.
  Type 'Subscription' is missing the following properties from type 'StripeSubscriptionWithPeriods': current_period_start, current_period_end
Error: src/app/api/webhooks/stripe/route.ts(62,53): error TS2345: Argument of type 'Invoice' is not assignable to parameter of type 'StripeInvoiceWithDetails'.
  Type 'Invoice' is missing the following properties from type 'StripeInvoiceWithDetails': subscription, payment_intent
Error: src/app/api/webhooks/stripe/route.ts(68,50): error TS2345: Argument of type 'Invoice' is not assignable to parameter of type 'StripeInvoiceWithDetails'.
  Type 'Invoice' is missing the following properties from type 'StripeInvoiceWithDetails': subscription, payment_intent
Error: src/components/__tests__/assistant-chat.test.tsx(312,21): error TS2345: Argument of type 'HTMLElement | undefined' is not assignable to parameter of type 'Window | Document | Node | Element'.
  Type 'undefined' is not assignable to type 'Window | Document | Node | Element'.
Error: src/components/__tests__/assistant-chat.test.tsx(363,21): error TS2345: Argument of type 'HTMLElement | undefined' is not assignable to parameter of type 'Window | Document | Node | Element'.
  Type 'undefined' is not assignable to type 'Window | Document | Node | Element'.
Error: src/components/__tests__/error-boundary.test.tsx(52,22): error TS2322: Type 'Element' is not assignable to type '(error: Error, reset: () => void) => ReactNode'.
  Type 'ReactElement<any, any>' provides no match for the signature '(error: Error, reset: () => void): ReactNode'.
Error: src/components/__tests__/error-boundary.test.tsx(65,22): error TS2322: Type '{ children: Element; onError: Mock<Procedure>; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<ErrorBoundary> & Readonly<Props>'.
  Property 'onError' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<ErrorBoundary> & Readonly<Props>'.
Error: src/components/__tests__/error-boundary.test.tsx(82,22): error TS2322: Type '{ children: Element; onRetry: Mock<Procedure>; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<ErrorBoundary> & Readonly<Props>'.
  Property 'onRetry' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<ErrorBoundary> & Readonly<Props>'.
Error: src/components/__tests__/error-boundary.test.tsx(95,22): error TS2322: Type '{ children: Element; onRetry: Mock<Procedure>; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<ErrorBoundary> & Readonly<Props>'.
  Property 'onRetry' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<ErrorBoundary> & Readonly<Props>'.
Error: src/components/__tests__/service-worker-registration.test.tsx(3,8): error TS2613: Module '"/home/runner/work/SubPilot-App/SubPilot-App/src/components/service-worker-registration"' has no default export. Did you mean to use 'import { ServiceWorkerRegistration } from "/home/runner/work/SubPilot-App/SubPilot-App/src/components/service-worker-registration"' instead?
Error: src/components/__tests__/service-worker-registration.test.tsx(87,22): error TS2540: Cannot assign to 'serviceWorker' because it is a read-only property.
Error: src/components/cancellation/unified-cancellation-modal.tsx(273,18): error TS2339: Property 'type' does not exist on type 'Partial<RealtimeUpdate>'.
Error: src/components/cancellation/unified-cancellation-modal.tsx(746,19): error TS2345: Argument of type '(update: Record<string, unknown>, index: number) => React.JSX.Element' is not assignable to parameter of type '(value: RealtimeUpdate, index: number, array: RealtimeUpdate[]) => Element'.
  Types of parameters 'update' and 'value' are incompatible.
    Type 'RealtimeUpdate' is not assignable to type 'Record<string, unknown>'.
      Index signature for type 'string' is missing in type 'RealtimeUpdate'.
Error: src/hooks/__tests__/use-auth.test.ts(83,27): error TS2339: Property 'signin' does not exist on type '{ user: { id: string; email: string; name?: string | null | undefined; image?: string | null | undefined; } | undefined; session: Session | null; isLoading: boolean; isAuthenticated: boolean; login: (provider?: string | undefined) => void; logout: () => Promise<...>; }'.
Error: src/hooks/__tests__/use-auth.test.ts(94,27): error TS2339: Property 'signout' does not exist on type '{ user: { id: string; email: string; name?: string | null | undefined; image?: string | null | undefined; } | undefined; session: Session | null; isLoading: boolean; isAuthenticated: boolean; login: (provider?: string | undefined) => void; logout: () => Promise<...>; }'.
Error: src/server/api/routers/__tests__/assistant.test.ts(242,21): error TS2339: Property 'conversation' does not exist on type '{ message: { content: string; id: string; createdAt: Date; metadata: JsonValue; role: string; conversationId: string; functionCall: JsonValue; toolCalls: JsonValue; }; action: { ...; } | null; }'.
Error: src/server/api/routers/__tests__/assistant.test.ts(609,21): error TS2339: Property 'conversations' does not exist on type '{ id: string; title: string | null; lastMessageAt: Date; matchedMessages: { content: string; id: string; createdAt: Date; role: string; }[]; }[]'.
Error: src/server/api/routers/__tests__/assistant.test.ts(610,21): error TS2339: Property 'total' does not exist on type '{ id: string; title: string | null; lastMessageAt: Date; matchedMessages: { content: string; id: string; createdAt: Date; role: string; }[]; }[]'.
Error: src/server/api/routers/__tests__/categorization.test.ts(74,7): error TS2561: Object literal may only specify known properties, but 'bulkCategorizeTransactions' does not exist in type 'MockCategorizationService'. Did you mean to write 'categorizeTransaction'?
Error: src/server/api/routers/__tests__/categorization.test.ts(82,7): error TS2345: Argument of type 'MockCategorizationService' is not assignable to parameter of type 'CategorizationService'.
  Type 'MockCategorizationService' is missing the following properties from type 'CategorizationService': db, bulkCategorizeTransactions, categorizeSubscription, updateSubscriptionCategory, and 5 more.
Error: src/server/api/routers/__tests__/categorization.test.ts(157,33): error TS2551: Property 'bulkCategorizeTransactions' does not exist on type 'MockCategorizationService'. Did you mean 'categorizeTransaction'?
Error: src/server/api/routers/__tests__/categorization.test.ts(187,33): error TS2339: Property 'categorizeSubscription' does not exist on type 'MockCategorizationService'.
Error: src/server/api/routers/__tests__/categorization.test.ts(203,35): error TS2339: Property 'categorizeSubscription' does not exist on type 'MockCategorizationService'.
Error: src/server/api/routers/__tests__/categorization.test.ts(210,33): error TS2339: Property 'updateSubscriptionCategory' does not exist on type 'MockCategorizationService'.
Error: src/server/api/routers/__tests__/categorization.test.ts(223,35): error TS2339: Property 'updateSubscriptionCategory' does not exist on type 'MockCategorizationService'.
Error: src/server/api/routers/__tests__/categorization.test.ts(291,40): error TS2339: Property 'initializeCategories' does not exist on type 'MockCategorizationService'.
Error: src/server/api/routers/__tests__/categorization.test.ts(315,33): error TS2339: Property 'getMerchantAliases' does not exist on type 'MockCategorizationService'.
Error: src/server/api/routers/__tests__/categorization.test.ts(329,40): error TS2339: Property 'getMerchantAliases' does not exist on type 'MockCategorizationService'.
Error: src/server/api/routers/__tests__/notifications.test.ts(145,45): error TS2352: Conversion of type 'Record<string, unknown>' to type 'Session' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'Record<string, unknown>' is missing the following properties from type 'Session': user, expires
Error: src/server/api/routers/__tests__/notifications.test.ts(375,23): error TS2352: Conversion of type 'Record<string, unknown>' to type 'Session' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'Record<string, unknown>' is missing the following properties from type 'Session': user, expires
Error: src/server/api/routers/__tests__/plaid.test.ts(468,19): error TS2322: Type 'number' is not assignable to type 'Decimal'.
Error: src/server/api/routers/__tests__/plaid.test.ts(480,11): error TS2322: Type 'number' is not assignable to type 'Decimal'.
Error: src/server/api/routers/__tests__/plaid.test.ts(501,9): error TS2322: Type 'number' is not assignable to type 'Decimal'.
Error: src/server/api/routers/__tests__/plaid.test.ts(758,58): error TS2352: Conversion of type '{ id: string; userId: string; plaidItemId: string; accessToken: string; institutionId: string; institutionName: string; institutionLogo: null; availableProducts: never[]; billedProducts: never[]; ... 9 more ...; bankAccounts: { ...; }[]; }[]' to type 'MockPlaidItemWithEmptyAccounts[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; userId: string; plaidItemId: string; accessToken: string; institutionId: string; institutionName: string; institutionLogo: null; availableProducts: never[]; billedProducts: never[]; ... 9 more ...; bankAccounts: { ...; }[]; }' is not comparable to type 'MockPlaidItemWithEmptyAccounts'.
    Type '{ id: string; userId: string; plaidItemId: string; accessToken: string; institutionId: string; institutionName: string; institutionLogo: null; availableProducts: never[]; billedProducts: never[]; ... 9 more ...; bankAccounts: { ...; }[]; }' is not comparable to type '{ bankAccounts: { type: string; id: string; name: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; plaidAccountId: string; plaidItemId: string; officialName: string | null; ... 5 more ...; lastSync: Date; }[]; }'.
      Types of property 'bankAccounts' are incompatible.
        Type '{ id: string; lastSync: Date; }[]' is not comparable to type '{ type: string; id: string; name: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; plaidAccountId: string; plaidItemId: string; officialName: string | null; ... 5 more ...; lastSync: Date; }[]'.
          Type '{ id: string; lastSync: Date; }' is missing the following properties from type '{ type: string; id: string; name: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; plaidAccountId: string; plaidItemId: string; officialName: string | null; ... 5 more ...; lastSync: Date; }': type, name, isActive, createdAt, and 10 more.
Error: src/server/api/routers/__tests__/subscriptions.test.ts(189,9): error TS2352: Conversion of type '({ _count: { transactions: number; }; transactions: ({ id: string; date: Date; amount: Decimal; } | undefined)[]; id: string; userId: string; name: string; amount: Decimal; ... 17 more ...; nextBillingDate?: undefined; } | { ...; })[]' to type 'MockSubscriptionWithCount[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ _count: { transactions: number; }; transactions: ({ id: string; date: Date; amount: Decimal; } | undefined)[]; id: string; userId: string; name: string; amount: Decimal; ... 17 more ...; nextBillingDate?: undefined; } | { ...; }' is not comparable to type 'MockSubscriptionWithCount'.
    Type '{ _count: { transactions: number; }; transactions: ({ id: string; date: Date; amount: Decimal; } | undefined)[]; id: string; userId: string; name: string; amount: Decimal; frequency: string; ... 16 more ...; currency?: undefined; }' is not comparable to type 'MockSubscriptionWithCount'.
      Type '{ _count: { transactions: number; }; transactions: ({ id: string; date: Date; amount: Decimal; } | undefined)[]; id: string; userId: string; name: string; amount: Decimal; frequency: string; ... 16 more ...; currency?: undefined; }' is missing the following properties from type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }': notes, aiCategory, aiCategoryConfidence, categoryOverride, and 4 more.
Error: src/server/api/routers/__tests__/subscriptions.test.ts(799,13): error TS2352: Conversion of type '{ id: string; userId: string; name: string; amount: Decimal; frequency: string; isActive: boolean; category: string; merchantName: string; description: string; startDate: Date; ... 12 more ...; nextBillingDate?: undefined; } | { ...; }' to type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ id: string; userId: string; name: string; amount: Decimal; frequency: string; isActive: boolean; category: string; merchantName: string; description: string; startDate: Date; cancelledAt: Date; ... 11 more ...; currency?: undefined; }' is missing the following properties from type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }': notes, aiCategory, aiCategoryConfidence, categoryOverride, and 4 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(189,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(207,9): error TS2353: Object literal may only specify known properties, and 'error' does not exist in type '{ healthy: boolean; status: string; stats: { total: number; pending: number; processing: number; completed: number; failed: number; delayed: number; }; isProcessing: boolean; lastProcessed: Date; }'.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(210,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(229,9): error TS2353: Object literal may only specify known properties, and 'error' does not exist in type '{ healthy: boolean; status: string; stats: { total: number; pending: number; processing: number; completed: number; failed: number; delayed: number; }; isProcessing: boolean; lastProcessed: Date; }'.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(236,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(256,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(279,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(293,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(313,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(328,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(338,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(354,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(369,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(379,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(402,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(418,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(440,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(458,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(470,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(482,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(506,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(523,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(541,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(565,53): error TS2339: Property 'retryFailedJob' does not exist on type 'MockedObject<MockJobQueue>'.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(568,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(583,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(596,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(621,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(649,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(663,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(688,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(709,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(729,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(755,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(762,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(786,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(828,9): error TS2353: Object literal may only specify known properties, and 'error' does not exist in type '{ healthy: boolean; status: string; stats: { total: number; pending: number; processing: number; completed: number; failed: number; delayed: number; }; isProcessing: boolean; lastProcessed: Date; }'.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(835,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(864,58): error TS2345: Argument of type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to parameter of type '{ session: Session | null; db: PrismaClient<PrismaClientOptions, never, DefaultArgs>; } | (() => MaybePromise<{ session: Session | null; db: PrismaClient<...>; }>)'.
  Type '{ session: Session | null; db: { $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<...>; create: Mock<...>; }; }; }' is not assignable to type '{ session: Session | null; db: PrismaClient<Prisma.PrismaClientOptions, never, DefaultArgs>; }'.
    Types of property 'db' are incompatible.
      Type '{ $queryRaw: Mock<Procedure>; cancellationRequest: { count: Mock<Procedure>; }; auditLog: { count: Mock<Procedure>; findMany: Mock<Procedure>; create: Mock<...>; }; }' is missing the following properties from type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>': $on, $connect, $disconnect, $use, and 28 more.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(869,14): error TS2532: Object is possibly 'undefined'.
Error: src/server/api/routers/__tests__/system-monitoring.test.ts(870,14): error TS2532: Object is possibly 'undefined'.
Error: src/server/api/routers/__tests__/transactions.test.ts(119,10): error TS2352: Conversion of type 'PrismaClient<PrismaClientOptions, never, DefaultArgs>' to type 'MockedDb' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'user.findMany' are incompatible between these types.
    Type '<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<DefaultArgs>> | undefined) => PrismaPromise<GetFindResult<$UserPayload<DefaultArgs>, T, PrismaClientOptions>[]>' is missing the following properties from type 'Mock<Procedure>': getMockName, mockName, mock, mockClear, and 14 more.
Error: src/server/api/routers/__tests__/transactions.test.ts(367,11): error TS2769: No overload matches this call.
  Overload 1 of 2, '(predicate: (value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => value is { ...; }, thisArg?: any): this is S[]', gave the following error.
    Argument of type '(t: TransactionWithAccount) => boolean' is not assignable to parameter of type '(value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => value is { ...; }'.
      Types of parameters 't' and 'value' are incompatible.
        Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: Prisma.JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is not assignable to type 'TransactionWithAccount'.
          Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is missing the following properties from type '{ id: string; category: JsonValue; createdAt: Date; updatedAt: Date; description: string; userId: string; isoCurrencyCode: string; aiCategory: string | null; aiCategoryConfidence: Decimal | null; ... 14 more ...; normalizedMerchantName: string | null; }': createdAt, updatedAt, description, userId, and 14 more.
  Overload 2 of 2, '(predicate: (value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => unknown, thisArg?: any): boolean', gave the following error.
    Argument of type '(t: TransactionWithAccount) => boolean' is not assignable to parameter of type '(value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => unknown'.
      Types of parameters 't' and 'value' are incompatible.
        Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: Prisma.JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is not assignable to type 'TransactionWithAccount'.
          Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is missing the following properties from type '{ id: string; category: JsonValue; createdAt: Date; updatedAt: Date; description: string; userId: string; isoCurrencyCode: string; aiCategory: string | null; aiCategoryConfidence: Decimal | null; ... 14 more ...; normalizedMerchantName: string | null; }': createdAt, updatedAt, description, userId, and 14 more.
Error: src/server/api/routers/__tests__/transactions.test.ts(537,35): error TS2769: No overload matches this call.
  Overload 1 of 2, '(predicate: (value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => value is { ...; }, thisArg?: any): this is S[]', gave the following error.
    Argument of type '(t: TransactionWithPending) => boolean' is not assignable to parameter of type '(value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => value is { ...; }'.
      Types of parameters 't' and 'value' are incompatible.
        Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: Prisma.JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is not assignable to type 'TransactionWithPending'.
          Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is missing the following properties from type '{ id: string; category: JsonValue; createdAt: Date; updatedAt: Date; description: string; userId: string; isoCurrencyCode: string; aiCategory: string | null; aiCategoryConfidence: Decimal | null; ... 14 more ...; normalizedMerchantName: string | null; }': createdAt, updatedAt, description, userId, and 14 more.
  Overload 2 of 2, '(predicate: (value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => unknown, thisArg?: any): boolean', gave the following error.
    Argument of type '(t: TransactionWithPending) => boolean' is not assignable to parameter of type '(value: { id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }, index: number, array: { ...; }[]) => unknown'.
      Types of parameters 't' and 'value' are incompatible.
        Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: Prisma.JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is not assignable to type 'TransactionWithPending'.
          Type '{ id: string; date: Date; name: string; merchantName: string | null; amount: number; currency: string; category: JsonValue; pending: boolean; isRecurring: boolean; account: { ...; }; subscription: { ...; } | null; }' is missing the following properties from type '{ id: string; category: JsonValue; createdAt: Date; updatedAt: Date; description: string; userId: string; isoCurrencyCode: string; aiCategory: string | null; aiCategoryConfidence: Decimal | null; ... 14 more ...; normalizedMerchantName: string | null; }': createdAt, updatedAt, description, userId, and 14 more.
Error: src/server/api/routers/__tests__/unified-cancellation.test.ts(119,40): error TS2339: Property 'mockResolvedValue' does not exist on type '(<T extends CancellationRequestGroupByArgs, HasSelectOrTake extends Or<Extends<"skip", Keys<T>>, Extends<"take", Keys<T>>>, OrderByArg extends True extends HasSelectOrTake ? { orderBy: CancellationRequestGroupByArgs["orderBy"]; } : { orderBy?: CancellationRequestGroupByArgs["orderBy"]; }, OrderFields extends Exclude...'.
Error: src/server/api/routers/unified-cancellation-enhanced.ts(1340,52): error TS2352: Conversion of type '{ summary: { total: number; successful: number; failed: number; pending: number; successRate: number; }; methodBreakdown: { api: number; webhook: number; manual: number; }; successRates: { overall: number; byMethod: Record<...>; byProvider: Record<...>; }; providerAnalytics: { ...; }[]; trends: { ...; }[]; }' to type 'AnalyticsData' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'summary' are incompatible.
    Property 'completed' is missing in type '{ total: number; successful: number; failed: number; pending: number; successRate: number; }' but required in type '{ total: number; completed: number; failed: number; pending: number; successRate: number; }'.
Error: src/server/lib/__tests__/audit-logger.test.ts(602,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/audit-logger.test.ts(621,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(15,13): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(34,17): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(75,7): error TS2322: Type '"production"' is not assignable to type '"test"'.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(76,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(90,7): error TS2322: Type '"production"' is not assignable to type '"test"'.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(91,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(273,7): error TS2322: Type '"development"' is not assignable to type '"test"'.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(288,7): error TS2322: Type '"production"' is not assignable to type '"test"'.
Error: src/server/lib/__tests__/error-sanitizer.test.ts(289,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/openai-client.test.ts(37,49): error TS2345: Argument of type '{ allowed: true; limit: number; remaining: number; reset: number; }' is not assignable to parameter of type '{ allowed: boolean; limit: number; remaining: number; reset: number; type: "api" | "auth" | "ai" | "export" | "admin" | "billing" | "banking"; }'.
  Property 'type' is missing in type '{ allowed: true; limit: number; remaining: number; reset: number; }' but required in type '{ allowed: boolean; limit: number; remaining: number; reset: number; type: "api" | "auth" | "ai" | "export" | "admin" | "billing" | "banking"; }'.
Error: src/server/lib/__tests__/rate-limiter-integration.test.ts(136,14): error TS18048: 'lastResult' is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter-integration.test.ts(137,14): error TS18048: 'lastResult' is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter-integration.test.ts(156,14): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter-integration.test.ts(157,14): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter-integration.test.ts(158,14): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter-integration.test.ts(256,14): error TS18048: 'lastResult' is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter.test.ts(224,14): error TS18048: 'lastResult' is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter.test.ts(225,14): error TS18048: 'lastResult' is possibly 'undefined'.
Error: src/server/lib/__tests__/rate-limiter.test.ts(528,9): error TS2322: Type '{ customId: string; session: null; }' is not assignable to type 'TRPCContext'.
  Types of property 'session' are incompatible.
    Type 'null' is not assignable to type '{ user?: { id: string; subscriptionTier?: string | undefined; } | undefined; } | undefined'.
Error: src/server/lib/__tests__/rate-limiter.test.ts(772,9): error TS2322: Type '{ session: null; clientIp: string; }' is not assignable to type 'TRPCContext'.
  Types of property 'session' are incompatible.
    Type 'null' is not assignable to type '{ user?: { id: string; subscriptionTier?: string | undefined; } | undefined; } | undefined'.
Error: src/server/lib/__tests__/rate-limiter.test.ts(792,9): error TS2322: Type '{ session: null; clientIp: null; }' is not assignable to type 'TRPCContext'.
  Types of property 'session' are incompatible.
    Type 'null' is not assignable to type '{ user?: { id: string; subscriptionTier?: string | undefined; } | undefined; } | undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(76,9): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { os: string; browser: string; device: string; mobile: boolean; trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { os: string; browser: string; device: string; mobile: boolean; trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(135,25): error TS18048: 'createCall' is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(139,24): error TS2339: Property 'getTime' does not exist on type 'string | Date'.
  Property 'getTime' does not exist on type 'string'.
Error: src/server/lib/__tests__/session-manager.test.ts(194,28): error TS18048: 'createCall' is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(257,26): error TS18048: 'createCall' is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(259,25): error TS2339: Property 'trusted' does not exist on type 'JsonNull | InputJsonValue'.
  Property 'trusted' does not exist on type 'string'.
Error: src/server/lib/__tests__/session-manager.test.ts(260,25): error TS2339: Property 'device' does not exist on type 'JsonNull | InputJsonValue'.
  Property 'device' does not exist on type 'string'.
Error: src/server/lib/__tests__/session-manager.test.ts(281,9): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(283,66): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(312,70): error TS2345: Argument of type '{ isActive: false; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ isActive: false; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(332,9): error TS2345: Argument of type '{ expiresAt: Date; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ expiresAt: Date; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(352,9): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(354,66): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(376,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/session-manager.test.ts(385,9): error TS2345: Argument of type '{ createdAt: Date; deviceInfo: { trusted: boolean; }; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ createdAt: Date; deviceInfo: { trusted: boolean; }; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(402,19): error TS2540: Cannot assign to 'NODE_ENV' because it is a read-only property.
Error: src/server/lib/__tests__/session-manager.test.ts(412,9): error TS2345: Argument of type '{ deviceInfo: { trusted: boolean; }; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ deviceInfo: { trusted: boolean; }; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(415,9): error TS2345: Argument of type '{ deviceInfo: { trusted: boolean; }; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ deviceInfo: { trusted: boolean; }; id: string; userId: string; fingerprint: string; ip: string; userAgent: string; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(428,9): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(430,66): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(448,9): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { trusted: boolean; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(618,9): error TS2345: Argument of type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { os: string; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }[]' is not assignable to parameter of type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }[]'.
  Property 'updatedAt' is missing in type '{ id: string; userId: string; fingerprint: string; ip: string; userAgent: string; deviceInfo: { os: string; }; createdAt: Date; lastActivity: Date; expiresAt: Date; isActive: boolean; revokedAt: null; }' but required in type '{ userAgent: string; id: string; isActive: boolean; createdAt: Date; updatedAt: Date; userId: string; fingerprint: string; ip: string; deviceInfo: JsonValue; lastActivity: Date; expiresAt: Date; revokedAt: Date | null; }'.
Error: src/server/lib/__tests__/session-manager.test.ts(624,14): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(625,14): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(743,16): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(743,51): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(746,16): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(747,11): error TS2532: Object is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(764,28): error TS18048: 'createCall' is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(783,28): error TS18048: 'createCall' is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(844,29): error TS18048: 'regularCall' is possibly 'undefined'.
Error: src/server/lib/__tests__/session-manager.test.ts(861,30): error TS18048: 'rememberCall' is possibly 'undefined'.
Error: src/server/lib/__tests__/validation-schemas.test.ts(355,23): error TS2339: Property 'errors' does not exist on type 'ValidationResult<{ size: number; type: string; name: string; }>'.
  Property 'errors' does not exist on type '{ success: true; data: { size: number; type: string; name: string; }; }'.
Error: src/server/lib/__tests__/validation-schemas.test.ts(364,23): error TS2339: Property 'errors' does not exist on type 'ValidationResult<{ type: string; size: number; name: string; }>'.
  Property 'errors' does not exist on type '{ success: true; data: { type: string; size: number; name: string; }; }'.
Error: src/server/lib/__tests__/validation-schemas.test.ts(373,23): error TS2339: Property 'errors' does not exist on type 'ValidationResult<{ name: string; size: number; type: string; }>'.
  Property 'errors' does not exist on type '{ success: true; data: { name: string; size: number; type: string; }; }'.
Error: src/server/lib/job-queue.ts(89,26): error TS2345: Argument of type 'Job<T>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'T' is not assignable to type 'JobData'.
Error: src/server/lib/realtime-notifications.ts(453,9): error TS2322: Type 'RealtimeNotification<NotificationData>' is not assignable to type 'NotificationData | { status: string; timestamp: string; }'.
  Type 'RealtimeNotification<NotificationData>' is not assignable to type 'SystemData'.
    Index signature for type 'string' is missing in type 'RealtimeNotification<NotificationData>'.
Error: src/server/lib/session-manager.ts(107,9): error TS2322: Type 'DeviceInfo' is not assignable to type 'JsonNull | InputJsonValue'.
  Type 'DeviceInfo' is not assignable to type 'InputJsonObject'.
    Index signature for type 'string' is missing in type 'DeviceInfo'.
Error: src/server/lib/session-manager.ts(456,24): error TS2352: Conversion of type 'string | number | boolean | JsonObject | JsonArray | null' to type 'DeviceInfo' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'JsonValue[]' is missing the following properties from type 'DeviceInfo': os, browser, device, mobile, trusted
Error: src/server/lib/session-manager.ts(491,19): error TS2352: Conversion of type 'string | number | boolean | JsonObject | JsonArray | null' to type 'DeviceInfo' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'JsonValue[]' is missing the following properties from type 'DeviceInfo': os, browser, device, mobile, trusted
Error: src/server/lib/workflow-engine.ts(506,36): error TS2345: Argument of type 'Record<string, unknown>' is not assignable to parameter of type 'Value | undefined'.
Error: src/server/services/__tests__/billing.service.test.ts(56,22): error TS2554: Expected 1 arguments, but got 0.
Error: src/server/services/__tests__/billing.service.test.ts(75,43): error TS2339: Property 'getUserBillingInfo' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/billing.service.test.ts(95,43): error TS2339: Property 'getUserBillingInfo' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/billing.service.test.ts(120,43): error TS2339: Property 'getAvailablePlans' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/billing.service.test.ts(138,43): error TS2551: Property 'createStripeCustomer' does not exist on type 'BillingService'. Did you mean 'getOrCreateStripeCustomer'?
Error: src/server/services/__tests__/billing.service.test.ts(159,43): error TS2339: Property 'canPerformAction' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/billing.service.test.ts(172,43): error TS2339: Property 'canPerformAction' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/billing.service.test.ts(185,43): error TS2339: Property 'canPerformAction' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/billing.service.test.ts(199,43): error TS2339: Property 'canPerformAction' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/billing.service.test.ts(224,9): error TS2554: Expected 1 arguments, but got 4.
Error: src/server/services/__tests__/billing.service.test.ts(254,11): error TS2554: Expected 1 arguments, but got 4.
Error: src/server/services/__tests__/billing.service.test.ts(269,43): error TS2339: Property 'updateUserPlan' does not exist on type 'BillingService'.
Error: src/server/services/__tests__/lightweight-cancellation.service.test.ts(29,26): error TS2352: Conversion of type '{ id: string; userId: string; name: string; amount: Decimal; status: string; category: string; isActive: true; createdAt: Date; updatedAt: Date; notes: null; description: null; ... 10 more ...; detectedAt: Date; }' to type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'detectionConfidence' are incompatible.
    Type 'number' is not comparable to type 'Decimal'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(344,68): error TS2345: Argument of type '{ subscriptionId: string; preferredMethod: "automation"; priority: "high"; scheduling: { scheduleFor: Date; }; }' is not assignable to parameter of type 'UnifiedCancellationRequest'.
  Types of property 'preferredMethod' are incompatible.
    Type '"automation"' is not assignable to type '"auto" | "api" | "event_driven" | "lightweight" | undefined'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(417,14): error TS18048: 'result.status' is possibly 'undefined'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(418,14): error TS18048: 'result.status' is possibly 'undefined'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(419,14): error TS18048: 'result.status' is possibly 'undefined'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(420,14): error TS18048: 'result.status' is possibly 'undefined'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(420,28): error TS2339: Property 'confirmationCode' does not exist on type '{ requestId: string; status: string; method?: string | undefined; attempts?: number | undefined; createdAt?: Date | undefined; updatedAt?: Date | undefined; subscription?: { ...; } | undefined; logs?: { ...; }[] | undefined; }'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(421,21): error TS2339: Property 'timeline' does not exist on type 'CancellationStatusResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(422,21): error TS2339: Property 'nextSteps' does not exist on type 'CancellationStatusResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(695,21): error TS2339: Property 'summary' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(696,21): error TS2339: Property 'summary' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(697,21): error TS2339: Property 'summary' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(698,21): error TS2339: Property 'summary' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(699,21): error TS2339: Property 'summary' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(700,21): error TS2339: Property 'methodBreakdown' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(701,21): error TS2339: Property 'methodBreakdown' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(702,21): error TS2339: Property 'methodBreakdown' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(703,21): error TS2339: Property 'methodBreakdown' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/__tests__/unified-cancellation-orchestrator.service.test.ts(704,21): error TS2339: Property 'averageCompletionTime' does not exist on type 'UnifiedAnalyticsResponse'.
Error: src/server/services/assistant.service.ts(428,9): error TS2322: Type '{ name: string; arguments: Record<string, unknown>; }' is not assignable to type 'InputJsonValue | NullableJsonNullValueInput | undefined'.
  Types of property 'arguments' are incompatible.
    Type 'Record<string, unknown>' is not assignable to type 'InputJsonValue | null | undefined'.
      Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/assistant.service.ts(517,11): error TS2322: Type 'ActionExecutionResult' is not assignable to type 'InputJsonValue | NullableJsonNullValueInput | undefined'.
  Type 'SpendingAnalysisResult' is not assignable to type 'InputJsonValue | NullableJsonNullValueInput | undefined'.
    Type 'SpendingAnalysisResult' is not assignable to type 'InputJsonObject'.
      Index signature for type 'string' is missing in type 'SpendingAnalysisResult'.
Error: src/server/services/assistant.service.ts(746,9): error TS2322: Type 'AssistantActionParams' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'AssistantActionParams' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/billing.service.ts(7,11): error TS2430: Interface 'StripeSubscriptionWithPeriods' incorrectly extends interface 'Subscription'.
  Types of property 'canceled_at' are incompatible.
    Type 'number | undefined' is not assignable to type 'number | null'.
      Type 'undefined' is not assignable to type 'number | null'.
Error: src/server/services/billing.service.ts(317,26): error TS2352: Conversion of type 'Response<Subscription>' to type 'StripeSubscriptionWithPeriods' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'Response<Subscription>' is missing the following properties from type 'StripeSubscriptionWithPeriods': current_period_start, current_period_end
Error: src/server/services/billing.service.ts(506,9): error TS2322: Type 'string | PaymentIntent | null' is not assignable to type 'string | null | undefined'.
  Type 'PaymentIntent' is not assignable to type 'string'.
Error: src/server/services/billing.service.ts(544,9): error TS2769: No overload matches this call.
  Overload 1 of 2, '(id: string, params?: SubscriptionRetrieveParams | undefined, options?: RequestOptions | undefined): Promise<Response<Subscription>>', gave the following error.
    Argument of type 'string | Subscription' is not assignable to parameter of type 'string'.
      Type 'Subscription' is not assignable to type 'string'.
  Overload 2 of 2, '(id: string, options?: RequestOptions | undefined): Promise<Response<Subscription>>', gave the following error.
    Argument of type 'string | Subscription' is not assignable to parameter of type 'string'.
      Type 'Subscription' is not assignable to type 'string'.
Error: src/server/services/cancellation.service.ts(239,13): error TS2352: Conversion of type '{ provider: { type: string; id: string; name: string; phoneNumber: string | null; apiEndpoint: string | null; loginUrl: string | null; email: string | null; selectors: JsonValue; ... 17 more ...; updatedAt: Date; } | null; subscription: { ...; }; } & { ...; }' to type 'CancellationRequestWithRelations' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'subscription.amount' are incompatible between these types.
    Type 'Decimal' is not comparable to type 'number'.
Error: src/server/services/cancellation.service.ts(244,13): error TS2352: Conversion of type '{ provider: { type: string; id: string; name: string; phoneNumber: string | null; apiEndpoint: string | null; loginUrl: string | null; email: string | null; selectors: JsonValue; ... 17 more ...; updatedAt: Date; } | null; subscription: { ...; }; } & { ...; }' to type 'CancellationRequestWithRelations' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'subscription.amount' are incompatible between these types.
    Type 'Decimal' is not comparable to type 'number'.
Error: src/server/services/cancellation.service.ts(250,13): error TS2352: Conversion of type '{ provider: { type: string; id: string; name: string; phoneNumber: string | null; apiEndpoint: string | null; loginUrl: string | null; email: string | null; selectors: JsonValue; ... 17 more ...; updatedAt: Date; } | null; subscription: { ...; }; } & { ...; }' to type 'CancellationRequestWithRelations' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  The types of 'subscription.amount' are incompatible between these types.
    Type 'Decimal' is not comparable to type 'number'.
Error: src/server/services/cancellation.service.ts(265,11): error TS2322: Type 'Record<string, unknown>' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/cancellation.service.ts(432,7): error TS2345: Argument of type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }' is not assignable to parameter of type 'SubscriptionWithProvider'.
  Types of property 'amount' are incompatible.
    Type 'Decimal' is not assignable to type 'number'.
Error: src/server/services/cancellation.service.ts(432,7): error TS2352: Conversion of type '{ name: string; amount: number; frequency: string; } | undefined' to type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ name: string; amount: number; frequency: string; }' is missing the following properties from type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }': id, provider, status, category, and 15 more.
Error: src/server/services/cancellation.service.ts(769,9): error TS2322: Type 'Record<string, unknown>' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/event-driven-cancellation.service.ts(469,7): error TS2352: Conversion of type '{ subscription: { id: string; name: string; amount: Decimal; frequency: string; }; logs: { id: string; status: string; createdAt: Date; action: string; message: string; metadata: JsonValue; requestId: string; duration: number | null; }[]; } & { ...; }' to type 'CancellationRequestWithSubscription' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'automationLog' are incompatible.
    Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
      Type 'JsonArray' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
        Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }'.
          Type 'JsonValue[]' is missing the following properties from type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }': step, timestamp, status
Error: src/server/services/event-driven-cancellation.service.ts(470,7): error TS2352: Conversion of type 'WorkflowInstance | null | undefined' to type 'WorkflowStatus' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'WorkflowInstance' is missing the following properties from type 'WorkflowStatus': completedSteps, errors, metadata
Error: src/server/services/event-driven-cancellation.service.ts(474,16): error TS2352: Conversion of type '{ refundAmount: number | null; subscription: { id: string; name: string; amount: Decimal; frequency: string; }; logs: { id: string; status: string; createdAt: Date; action: string; message: string; metadata: JsonValue; requestId: string; duration: number | null; }[]; ... 28 more ...; completedAt: Date | null; }' to type 'CancellationRequestWithSubscription' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'automationLog' are incompatible.
    Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
      Type 'JsonArray' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
        Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }'.
          Type 'JsonValue[]' is missing the following properties from type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }': step, timestamp, status
Error: src/server/services/event-driven-cancellation.service.ts(480,17): error TS2352: Conversion of type 'WorkflowInstance | null | undefined' to type 'WorkflowStatus' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type 'WorkflowInstance' is missing the following properties from type 'WorkflowStatus': completedSteps, errors, metadata
Error: src/server/services/event-driven-cancellation.service.ts(481,17): error TS2352: Conversion of type '{ timestamp: Date; action: string; status: string; message: string; metadata: JsonValue; }[]' to type 'CancellationTimeline[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ timestamp: Date; action: string; status: string; message: string; metadata: JsonValue; }' is missing the following properties from type 'CancellationTimeline': id, event, details
Error: src/server/services/event-driven-cancellation.service.ts(524,43): error TS2352: Conversion of type 'RetryEventData' to type 'FinalFailureData' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Property 'maxAttempts' is missing in type 'RetryEventData' but required in type 'FinalFailureData'.
Error: src/server/services/event-driven-cancellation.service.ts(846,9): error TS2353: Object literal may only specify known properties, and 'total' does not exist in type 'EventDrivenAnalyticsSummary'.
Error: src/server/services/event-driven-cancellation.service.ts(852,7): error TS2322: Type '{ date: Date; status: string; method: string; }[]' is not assignable to type 'EventDrivenTrend[]'.
  Type '{ date: Date; status: string; method: string; }' is missing the following properties from type 'EventDrivenTrend': requests, completions, failures
Error: src/server/services/event-driven-cancellation.service.ts(857,7): error TS2322: Type 'Record<string, MethodData>' is not assignable to type 'EventDrivenMethodEffectiveness'.
  'string' index signatures are incompatible.
    Type 'MethodData' is missing the following properties from type '{ totalAttempts: number; successfulAttempts: number; failedAttempts: number; averageTime: number; successRate: number; }': totalAttempts, successfulAttempts, failedAttempts, averageTime
Error: src/server/services/job-processors/analytics-processor.ts(742,7): error TS2353: Object literal may only specify known properties, and 'commonErrors' does not exist in type '{ timeframe: string; errorRate: number; totalOperations: number; failedOperations: number; systemStatus: "healthy" | "degraded" | "critical"; uptime: number; }'.
Error: src/server/services/job-processors/cancellation-processor.ts(181,13): error TS2322: Type 'ProviderApiResponse' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'ProviderApiResponse' is not assignable to type 'InputJsonObject'.
    Property 'data' is incompatible with index signature.
      Type 'Record<string, unknown>' is not assignable to type 'InputJsonValue | null | undefined'.
        Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/job-processors/cancellation-processor.ts(519,11): error TS2322: Type 'Record<string, unknown>' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/job-processors/index.ts(96,59): error TS2345: Argument of type 'Job<CancellationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'CancellationJobData' is not assignable to type 'JobData'.
    Types of property 'method' are incompatible.
      Type 'string | undefined' is not assignable to type '"api" | "manual" | "automation" | undefined'.
        Type 'string' is not assignable to type '"api" | "manual" | "automation" | undefined'.
Error: src/server/services/job-processors/index.ts(99,52): error TS2345: Argument of type 'Job<CancellationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'CancellationJobData' is not assignable to type 'JobData'.
    Types of property 'method' are incompatible.
      Type 'string | undefined' is not assignable to type '"api" | "manual" | "automation" | undefined'.
        Type 'string' is not assignable to type '"api" | "manual" | "automation" | undefined'.
Error: src/server/services/job-processors/index.ts(102,56): error TS2345: Argument of type 'Job<CancellationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'CancellationJobData' is not assignable to type 'JobData'.
    Types of property 'method' are incompatible.
      Type 'string | undefined' is not assignable to type '"api" | "manual" | "automation" | undefined'.
        Type 'string' is not assignable to type '"api" | "manual" | "automation" | undefined'.
Error: src/server/services/job-processors/index.ts(105,55): error TS2345: Argument of type 'Job<CancellationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'CancellationJobData' is not assignable to type 'JobData'.
    Types of property 'method' are incompatible.
      Type 'string | undefined' is not assignable to type '"api" | "manual" | "automation" | undefined'.
        Type 'string' is not assignable to type '"api" | "manual" | "automation" | undefined'.
Error: src/server/services/job-processors/index.ts(108,61): error TS2345: Argument of type 'Job<CancellationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'CancellationJobData' is not assignable to type 'JobData'.
    Types of property 'method' are incompatible.
      Type 'string | undefined' is not assignable to type '"api" | "manual" | "automation" | undefined'.
        Type 'string' is not assignable to type '"api" | "manual" | "automation" | undefined'.
Error: src/server/services/job-processors/index.ts(111,49): error TS2345: Argument of type 'Job<CancellationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'CancellationJobData' is not assignable to type 'JobData'.
    Types of property 'method' are incompatible.
      Type 'string | undefined' is not assignable to type '"api" | "manual" | "automation" | undefined'.
        Type 'string' is not assignable to type '"api" | "manual" | "automation" | undefined'.
Error: src/server/services/job-processors/index.ts(116,53): error TS2345: Argument of type 'Job<NotificationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'NotificationJobData' is not assignable to type 'JobData'.
    Index signature for type 'string' is missing in type 'NotificationJobData'.
Error: src/server/services/job-processors/index.ts(119,53): error TS2345: Argument of type 'Job<NotificationJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'NotificationJobData' is not assignable to type 'JobData'.
    Index signature for type 'string' is missing in type 'NotificationJobData'.
Error: src/server/services/job-processors/index.ts(124,49): error TS2345: Argument of type 'Job<WebhookJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'WebhookJobData' is not assignable to type 'JobData'.
    Index signature for type 'string' is missing in type 'WebhookJobData'.
Error: src/server/services/job-processors/index.ts(127,43): error TS2345: Argument of type 'Job<WebhookJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'WebhookJobData' is not assignable to type 'JobData'.
    Index signature for type 'string' is missing in type 'WebhookJobData'.
Error: src/server/services/job-processors/index.ts(132,51): error TS2345: Argument of type 'Job<AnalyticsJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'AnalyticsJobData' is not assignable to type 'JobData'.
    Index signature for type 'string' is missing in type 'AnalyticsJobData'.
Error: src/server/services/job-processors/index.ts(135,54): error TS2345: Argument of type 'Job<AnalyticsJobData>' is not assignable to parameter of type 'Job<JobData>'.
  Type 'AnalyticsJobData' is not assignable to type 'JobData'.
    Index signature for type 'string' is missing in type 'AnalyticsJobData'.
Error: src/server/services/job-processors/notification-processor.ts(493,9): error TS2322: Type 'Record<string, unknown>' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/job-processors/webhook-processor.ts(241,9): error TS2345: Argument of type 'ExtractedWebhookData | undefined' is not assignable to parameter of type 'ExtractedWebhookData'.
  Type 'undefined' is not assignable to type 'ExtractedWebhookData'.
Error: src/server/services/job-processors/webhook-processor.ts(740,13): error TS2322: Type 'Record<string, unknown>' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/lightweight-cancellation.service.ts(493,16): error TS2352: Conversion of type '{ subscription: { id: string; name: string; status: string; provider: {}; }; userAgent: string | null; method: string; id: string; status: string; result: JsonValue; ... 24 more ...; completedAt: Date | null; }' to type 'CancellationRequestWithSubscription' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Types of property 'automationLog' are incompatible.
    Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
      Type 'JsonArray' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
        Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }'.
          Type 'JsonValue[]' is missing the following properties from type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }': step, timestamp, status
Error: src/server/services/lightweight-cancellation.service.ts(528,12): error TS2352: Conversion of type '{ subscription: { id: string; name: string; amount: number; status: string; provider: {}; }; userAgent: string | null; method: string; id: string; status: string; result: JsonValue; createdAt: Date; ... 23 more ...; completedAt: Date | null; }[]' to type 'CancellationRequestWithSubscription[]' may be a mistake because neither type sufficiently overlaps with the other. If this was intentional, convert the expression to 'unknown' first.
  Type '{ subscription: { id: string; name: string; amount: number; status: string; provider: {}; }; userAgent: string | null; method: string; id: string; status: string; result: JsonValue; ... 24 more ...; completedAt: Date | null; }' is not comparable to type 'CancellationRequestWithSubscription'.
    Types of property 'automationLog' are incompatible.
      Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
        Type 'JsonArray' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }[]'.
          Type 'JsonValue' is not comparable to type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }'.
            Type 'JsonValue[]' is missing the following properties from type '{ step: string; timestamp: Date; status: "success" | "pending" | "failed"; details?: string | undefined; }': step, timestamp, status
Error: src/server/services/unified-cancellation-orchestrator-enhanced.service.ts(374,9): error TS2345: Argument of type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }' is not assignable to parameter of type 'SubscriptionForCancellation'.
  Types of property 'amount' are incompatible.
    Type 'Decimal' is not assignable to type 'number'.
Error: src/server/services/unified-cancellation-orchestrator-enhanced.service.ts(686,11): error TS2345: Argument of type '{ orchestrationId: string; method: string; metadata: { attemptsUsed: number; providerInfo: Record<string, unknown>; realTimeUpdatesEnabled: boolean; }; tracking: { sseEndpoint: string; statusCheckUrl: string; }; }' is not assignable to parameter of type 'Partial<UnifiedCancellationResult>'.
  Types of property 'method' are incompatible.
    Type 'string' is not assignable to type '"api" | "event_driven" | "lightweight" | undefined'.
Error: src/server/services/unified-cancellation-orchestrator-enhanced.service.ts(695,11): error TS2345: Argument of type '{ orchestrationId: string; method: string; metadata: { attemptsUsed: number; providerInfo: Record<string, unknown>; realTimeUpdatesEnabled: boolean; }; tracking: { sseEndpoint: string; statusCheckUrl: string; }; }' is not assignable to parameter of type 'Partial<UnifiedCancellationResult>'.
  Types of property 'method' are incompatible.
    Type 'string' is not assignable to type '"api" | "event_driven" | "lightweight" | undefined'.
Error: src/server/services/unified-cancellation-orchestrator-enhanced.service.ts(704,11): error TS2345: Argument of type '{ orchestrationId: string; method: string; metadata: { attemptsUsed: number; providerInfo: Record<string, unknown>; realTimeUpdatesEnabled: boolean; }; tracking: { sseEndpoint: string; statusCheckUrl: string; }; }' is not assignable to parameter of type 'Partial<UnifiedCancellationResult>'.
  Types of property 'method' are incompatible.
    Type 'string' is not assignable to type '"api" | "event_driven" | "lightweight" | undefined'.
Error: src/server/services/unified-cancellation-orchestrator-enhanced.service.ts(1340,13): error TS2322: Type 'Record<string, unknown>' is not assignable to type 'JsonNull | InputJsonValue | undefined'.
  Type 'Record<string, unknown>' is missing the following properties from type 'readonly (InputJsonValue | null)[]': length, concat, join, slice, and 26 more.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(244,24): error TS2353: Object literal may only specify known properties, and 'subscriptionId' does not exist in type 'CancellationErrorDetails'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(261,24): error TS2353: Object literal may only specify known properties, and 'userId' does not exist in type 'CancellationErrorDetails'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(279,15): error TS2353: Object literal may only specify known properties, and 'subscriptionId' does not exist in type 'CancellationErrorDetails'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(307,15): error TS2353: Object literal may only specify known properties, and 'subscriptionId' does not exist in type 'CancellationErrorDetails'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(406,11): error TS2322: Type 'unknown' is not assignable to type 'CancellationErrorDetails | undefined'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(577,26): error TS2353: Object literal may only specify known properties, and 'method' does not exist in type 'CancellationErrorDetails'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(605,11): error TS2322: Type 'unknown' is not assignable to type 'CancellationErrorDetails | undefined'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(626,5): error TS2322: Type '{ success: true; status: "processing"; message: string; estimatedCompletion: Date; requestId?: string | undefined; orchestrationId?: string | undefined; method?: "api" | "event_driven" | "lightweight" | undefined; manualInstructions?: { steps: string[]; contactInfo?: { phone?: string; email?: string; website?: strin...' is not assignable to type 'UnifiedCancellationResult'.
  Types of property 'requestId' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(663,9): error TS2353: Object literal may only specify known properties, and 'workflowId' does not exist in type '{ providerCapabilities?: ProviderCapabilityDetails | undefined; fallbackReason?: string | undefined; originalMethod?: string | undefined; retryCount?: number | undefined; }'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(683,5): error TS2322: Type '{ success: true; status: "requires_manual"; message: string; manualInstructions: { steps: string[]; contactInfo: { website?: string; phone?: string; email?: string; chatUrl?: string; }; expectedDuration: string; } | undefined; ... 5 more ...; error?: { code: string; message: string; details?: CancellationErrorDetail...' is not assignable to type 'UnifiedCancellationResult'.
  Types of property 'requestId' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(757,11): error TS2345: Argument of type '{ id: string; name: string; provider?: unknown; }' is not assignable to parameter of type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }'.
  Type '{ id: string; name: string; provider?: unknown; }' is missing the following properties from type '{ id: string; name: string; provider: JsonValue; status: string; category: string | null; isActive: boolean; createdAt: Date; updatedAt: Date; description: string | null; ... 12 more ...; detectedAt: Date; }': status, category, isActive, createdAt, and 15 more.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(786,20): error TS2353: Object literal may only specify known properties, and 'originalMethod' does not exist in type 'CancellationErrorDetails'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(797,48): error TS2345: Argument of type 'CancellationEventData' is not assignable to parameter of type 'ServiceCompletionData'.
  Types of property 'requestId' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(801,45): error TS2345: Argument of type 'CancellationEventData' is not assignable to parameter of type 'ServiceCompletionData'.
  Types of property 'requestId' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(806,55): error TS2345: Argument of type 'CancellationEventData' is not assignable to parameter of type 'ServiceCompletionData'.
  Types of property 'requestId' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(811,42): error TS2345: Argument of type 'CancellationEventData' is not assignable to parameter of type 'ServiceCompletionData'.
  Types of property 'requestId' are incompatible.
    Type 'string | undefined' is not assignable to type 'string'.
      Type 'undefined' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(835,9): error TS2345: Argument of type 'ServiceCompletionData' is not assignable to parameter of type 'Record<string, unknown>'.
  Index signature for type 'string' is missing in type 'ServiceCompletionData'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(873,44): error TS2339: Property 'error' does not exist on type 'ServiceCompletionData'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(874,9): error TS2345: Argument of type 'ServiceCompletionData' is not assignable to parameter of type 'Record<string, unknown>'.
  Index signature for type 'string' is missing in type 'ServiceCompletionData'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(886,23): error TS2339: Property 'error' does not exist on type 'ServiceCompletionData'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(913,9): error TS2345: Argument of type 'ServiceCompletionData' is not assignable to parameter of type 'Record<string, unknown>'.
  Index signature for type 'string' is missing in type 'ServiceCompletionData'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(925,26): error TS2339: Property 'progress' does not exist on type 'ServiceCompletionData'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(944,9): error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(1289,13): error TS2322: Type 'Decimal' is not assignable to type 'number'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(1434,11): error TS2322: Type '{ code: string; message: string; }' is not assignable to type 'string'.
Error: src/server/services/unified-cancellation-orchestrator.service.ts(1549,7): error TS2353: Object literal may only specify known properties, and 'summary' does not exist in type 'UnifiedAnalyticsResponse'.
❌ TypeScript compilation failed
Error: Process completed with exit code 1.
