version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: subpilot-postgres
    environment:
      POSTGRES_USER: subpilot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-subpilot123}
      POSTGRES_DB: subpilot_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U subpilot -d subpilot_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: subpilot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: subpilot-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /tmp
    volumes:
      - mailhog_data:/tmp

  # SubPilot Application
  app:
    build:
      context: ../..
      dockerfile: Dockerfile
    container_name: subpilot-app
    ports:
      - "3000:3000"
    env_file:
      - docker.env.development
    environment:
      - DATABASE_URL=postgresql://subpilot:${POSTGRES_PASSWORD:-subpilot123}@postgres:5432/subpilot_dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    volumes:
      - ../..:/app
      - /app/node_modules
      - /app/.next
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:
  mailhog_data: